---
title: "World University Library Ranking"
author: David Pomerenke
date: "2022-08-03"
reference-location: margin
bibliography: references.bib
csl: ieee.csl
comments:
  hypothesis: 
    theme: clean
---

With the exception of the [Nando's Excellence Framework](https://bantshire.github.io/blog-nandos.html), university ratings tend to be bullshit [@bowdenFantasyHigherEducation2000; @saisanaHigherEducationRankings2008; @kehmGlobalUniversityRankings2014]. Nonetheless, I give it another shot and rank universities by how long their library is open. -- It turns out that 70% of "universities" have their libraries closed more than half of the time, and a mere 6% are open all the time.

## Method

Opening times are retrieved via Google Maps for all universities in the racist list of [_QS_ World University Rankings](https://www.topuniversities.com/university-rankings/world-university-rankings/2023) and converted to percentages. Where there are multiple libraries, the one with the longest opening hours is selected. User ratings are also retrieved via Google Maps and reranked using [Bayesian averaging](https://www.algolia.com/doc/guides/managing-results/must-do/custom-ranking/how-to/bayesian-average/). The table is sorted by opening hours first, and by ratings second.

The main limitation is finding the right libraries for the universities. The approach is to simply use "\<university name\> Library" as a query and let Google Maps figure it out, and it works surprisingly well, but not perfectly. Especially smaller libraries (pertaining to single faculties or colleges) may not be properly represented.

Code and data are available [on Github](https://github.com/davidpomerenke/library-ranking).

```{python}
#| echo: false
#| label: fig-cap-margin
#| fig-cap: "QS rank vs opening hours (1.0=always). Left: All universities. Right: Only top 100 QS ranked universities. There is no clear correlation."
#| fig-cap-location: margin

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("data_out/ranking.csv")
df1 = df.copy()
df1 = df1[df1["qs_rank"] != "?"]
df1["qs_rank"] = df1["qs_rank"].astype(float)
fig, ax = plt.subplots(1, 2)
sns.regplot(data=df1, x="qs_rank", y="opening_hours", ax=ax[0])
ax[0].set(xlim=(len(df), 1))
df1 = df1[df1["qs_rank"] <= 100]
sns.regplot(data=df1, x="qs_rank", y="opening_hours", ax=ax[1])
ax[1].set(xlim=(100, 1))
plt.show()
```

## Rankings

```{python}
#| echo: false
#| column: page
from IPython.display import HTML
pd.set_option('display.max_rows', None)
df["opening_hours"] = df["opening_hours"].apply(lambda x: str(int(x*100))+"%")
df.drop(columns=["gmaps_rating"])
display(HTML(df[["rank", "opening_hours", "gmaps_rating", "library", "uni"]].to_html(index=False)))
```
